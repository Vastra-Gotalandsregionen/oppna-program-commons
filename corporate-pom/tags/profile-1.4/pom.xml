<?xml version="1.0"?>
  <!--
    Copyright 2010 Västra Götalandsregionen This library is free software; you can redistribute it and/or modify it
    under the terms of version 2.1 of the GNU Lesser General Public License as published by the Free Software
    Foundation. This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without
    even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General
    Public License for more details. You should have received a copy of the GNU Lesser General Public License along
    with this library; if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
    02111-1307 USA
  -->

  <!--
    This is the System-level Maven POM. Usage: Define all truly common things for the system here. For example:
    versions of third-party dependencies used throughout the system. Template version: 1.2-SNAPSHOT Generation time
    : 2009-12-18 13:18:09 CET
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>se.vgregion.common</groupId>
  <artifactId>profile</artifactId>
  <packaging>pom</packaging>
  <version>1.4</version>
  <name>${project.artifactId}</name>

  <!-- common library versions -->
  <properties>
    <javg.version>1.2-SNAPSHOT</javg.version>
    <spring.fw.version>3.0.0.RELEASE</spring.fw.version>
    <apache.cxf.version>2.1.1</apache.cxf.version>
    <jstl.version>1.2</jstl.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <spring.ldap.version>1.3.0.RELEASE</spring.ldap.version>
    <portlet-api.version>2.0</portlet-api.version>
    <servlet-api.version>2.5</servlet-api.version>
    <slf4j.version>1.5.8</slf4j.version>
    <log4j.version>1.2.14</log4j.version>
    <liferay.version>5.2.3</liferay.version>
    <junit.version>4.7</junit.version>
    <powermock.version>1.3.1</powermock.version>
    <hibernate.version>3.4.0.GA</hibernate.version>
    <quartz.version>1.5.2</quartz.version>
    <aspectj.version>1.6.5</aspectj.version>
    <cglib.version>2.2</cglib.version>
    <asm.version>2.2.3</asm.version>
    <mockito.version>1.8.0</mockito.version>
    <compileSource>1.6</compileSource>
    <jpa.version>1.0</jpa.version>
  </properties>

  <build>
    <pluginManagement>
      <plugins>
        <!-- The Compiler Plugin is used to compile the sources of your project. -->
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>2.0.2</version>
        </plugin>
        <!-- The Source Plugin creates a jar archive of the source files of the current project. -->
        <plugin>
          <artifactId>maven-source-plugin</artifactId>
          <version>2.1.1</version>
        </plugin>
        <!--
          The Eclipse Plugin is used to generate Eclipse IDE files (*.classpath, *.wtpmodules and the .settings
          folder) for use with a project.
        -->
        <plugin>
          <artifactId>maven-eclipse-plugin</artifactId>
          <version>2.7</version>
        </plugin>
        <!--
          The SCM Plugin offers vendor independent access to common scm commands by offering a set of command
          mappings for the configured scm.
        -->
        <plugin>
          <artifactId>maven-scm-plugin</artifactId>
          <version>1.2</version>
        </plugin>
        <!-- The Checkstyle Plugin generates a report regarding the code style used by the developers. -->
        <plugin>
          <artifactId>maven-checkstyle-plugin</artifactId>
          <version>2.4</version>
        </plugin>
        <!--
          The JXR plugin produces a cross-reference of the project's sources. The generated reports make it easier
          for the user to reference or find specific lines of code.
        -->
        <plugin>
          <artifactId>maven-jxr-plugin</artifactId>
          <version>2.1</version>
        </plugin>
        <!-- The Javadoc Plugin uses the Javadoc tool to generate javadocs for the specified project. -->
        <plugin>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>2.6.1</version>
        </plugin>
        <!--
          PMD scans Java source code and looks for potential problems like Possible bugs, Dead code, Suboptimal
          code, Overcomplicated expressions and Duplicate code
        -->
        <plugin>
          <artifactId>maven-pmd-plugin</artifactId>
          <version>2.4</version>
        </plugin>
        <!--
          FindBugs looks for bugs in Java programs. It is based on the concept of bug patterns. IE: difficult
          language features, misunderstood API methods, misunderstood invariants when code is modified during
          maintenance or garden variety mistakes: typos, use of the wrong boolean operator.
        -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>findbugs-maven-plugin</artifactId>
          <version>2.0.1</version>
        </plugin>
        <!-- The Failsafe Plugin is a fork of the Surefire plugin designed to run integration tests. -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>failsafe-maven-plugin</artifactId>
          <version>2.4.3-alpha-1</version>
        </plugin>
        <!--
          The Cobertura plugin provides the features of Cobertura within the Maven 2 environment. Cobertura is a
          free Java tool that calculates the percentage of code accessed by tests.
        -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>cobertura-maven-plugin</artifactId>
          <version>2.3</version>
        </plugin>
        <!--
          The Surefire Plugin is used during the test phase of the build lifecycle to execute the unit tests of an
          application.
        -->
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <configuration>
            <excludes>
              <exclude>**/integrationtest/**</exclude>
            </excludes>
          </configuration>
        </plugin>
        <!-- maven-license-plugin helps you managing license headers in source files. -->
        <plugin>
          <groupId>com.mycila.maven-license-plugin</groupId>
          <artifactId>maven-license-plugin</artifactId>
          <version>1.5.1</version>
          <configuration>
            <header>http://oppna-program-commons.googlecode.com/svn/corporate-pom/trunk/header.txt</header>
            <excludes>
              <exclude>target/**</exclude>
              <exclude>**/NOTICES.txt</exclude>
              <exclude>thirdpartylicenses/**</exclude>
              <exclude>**/LICENSE.rtf</exclude>
              <exclude>**/context.xml</exclude>
            </excludes>
          </configuration>
          <executions>
            <execution>
              <id>format</id>
              <phase>process-sources</phase>
              <goals>
                <goal>format</goal>
              </goals>
            </execution>
            <execution>
              <id>check</id>
              <phase>compile</phase>
              <goals>
                <goal>check</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <source>${compileSource}</source>
          <target>${compileSource}</target>
          <optimize>false</optimize>
          <debug>true</debug>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-sources</id>
            <phase>verify</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <artifactId>maven-javadoc-plugin</artifactId>
        <executions>
          <execution>
            <id>attach-javadocs</id>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>failsafe-maven-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>integration-test</goal>
              <goal>verify</goal>
            </goals>
            <configuration>
              <testFailureIgnore>true</testFailureIgnore>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <configuration>
          <wtpversion>2.0</wtpversion>
          <downloadJavadocs>true</downloadJavadocs>
          <downloadSources>true</downloadSources>
          <additionalProjectnatures>
            <projectnature>org.springframework.ide.eclipse.core.springnature</projectnature>
          </additionalProjectnatures>
        </configuration>
      </plugin>
      <plugin>
        <artifactId>maven-scm-plugin</artifactId>
        <configuration>
          <connectionType>developerConnection</connectionType>
        </configuration>
      </plugin>
    </plugins>

    <!-- needed for SVN-deployment -->
    <extensions>
      <extension>
        <groupId>org.jvnet.wagon-svn</groupId>
        <artifactId>wagon-svn</artifactId>
        <version>1.8</version>
      </extension>
    </extensions>
  </build>


  <scm>
    <developerConnection>scm:svn:https://oppna-program-commons.googlecode.com/svn/corporate-pom/tags/profile-1.4</developerConnection>
    <url>http://oppna-program-commons.googlecode.com/svn/corporate-pom/tags/profile-1.4</url>
  </scm>

  <reporting>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <configuration>
          <configLocation>http://oppna-program.googlecode.com/svn/dev-environment/checkstyle/sun_checks_vgr.xml</configLocation>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>cobertura-maven-plugin</artifactId>
        <configuration>
          <formats>
            <format>html</format>
            <format>xml</format>
          </formats>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jxr-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-pmd-plugin</artifactId>
        <configuration>
          <targetJdk>${compileSource}</targetJdk>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>surefire-report-maven-plugin</artifactId>
        <inherited>true</inherited>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>findbugs-maven-plugin</artifactId>
        <configuration>
          <findbugsXmlOutput>true</findbugsXmlOutput>
          <findbugsXmlWithMessages>true</findbugsXmlWithMessages>
          <xmlOutput>true</xmlOutput>
        </configuration>
      </plugin>
    </plugins>
  </reporting>

  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${spring.fw.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${spring.fw.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context-support</artifactId>
        <version>${spring.fw.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${spring.fw.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
        <version>${spring.fw.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-tx</artifactId>
        <version>${spring.fw.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${spring.fw.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.ldap</groupId>
        <artifactId>spring-ldap-core</artifactId>
        <version>${spring.ldap.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.ldap</groupId>
        <artifactId>spring-ldap-core-tiger</artifactId>
        <version>${spring.ldap.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jdbc</artifactId>
        <version>${spring.fw.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-orm</artifactId>
        <version>${spring.fw.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc-portlet</artifactId>
        <version>${spring.fw.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aspects</artifactId>
        <version>${spring.fw.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>servlet-api</artifactId>
        <version>${servlet-api.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>javax.portlet</groupId>
        <artifactId>portlet-api</artifactId>
        <version>${portlet-api.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.liferay</groupId>
        <artifactId>portal-kernal</artifactId>
        <version>${liferay.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.liferay</groupId>
        <artifactId>portal-service</artifactId>
        <version>${liferay.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.liferay</groupId>
        <artifactId>portal-impl</artifactId>
        <version>${liferay.version}</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>com.liferay</groupId>
        <artifactId>util-java</artifactId>
        <version>${liferay.version}</version>
	<scope>runtime</scope>
      </dependency>
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-test</artifactId>
        <version>${spring.fw.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-all</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>hsqldb</groupId>
        <artifactId>hsqldb</artifactId>
        <version>1.8.0.1</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>se.vgregion.test-utils</groupId>
        <artifactId>test-utils-bc-core-composite-svc</artifactId>
        <version>1.1</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.powermock.modules</groupId>
        <artifactId>powermock-module-junit4</artifactId>
        <version>${powermock.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.powermock.api</groupId>
        <artifactId>powermock-api-mockito</artifactId>
        <version>${powermock.version}</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>se.vgregion.test-utils</groupId>
        <artifactId>test-utils-system</artifactId>
        <version>1.1</version>
        <scope>test</scope>
      </dependency>
      <dependency>
        <groupId>org.aspectj</groupId>
        <artifactId>aspectjweaver</artifactId>
        <version>${aspectj.version}</version>
      </dependency>
      <dependency>
        <groupId>cglib</groupId>
        <artifactId>cglib-nodep</artifactId>
        <version>${cglib.version}</version>
      </dependency>
      <dependency>
        <groupId>asm</groupId>
        <artifactId>asm</artifactId>
        <version>${asm.version}</version>
      </dependency>
      <dependency>
        <groupId>org.hibernate</groupId>
        <artifactId>hibernate-entitymanager</artifactId>
        <version>${hibernate.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.persistence</groupId>
        <artifactId>persistence-api</artifactId>
        <version>${jpa.version}</version>
      </dependency>
      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>jstl</artifactId>
        <version>${jstl.version}</version>
      </dependency>
      <dependency>
        <groupId>quartz</groupId>
        <artifactId>quartz</artifactId>
        <version>${quartz.version}</version>
      </dependency>
      <dependency>
        <groupId>com.thoughtworks.xstream</groupId>
        <artifactId>xstream</artifactId>
        <version>1.3.1</version>
      </dependency>
      <dependency>
        <groupId>com.sun.portal</groupId>
        <artifactId>portlet-container</artifactId>
        <version>2.1</version>
        <scope>provided</scope>
      </dependency>
      <dependency>
        <groupId>taglibs</groupId>
        <artifactId>standard</artifactId>
        <version>1.1.2</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <dependencies>
    <dependency>
      <groupId>log4j</groupId>
      <artifactId>log4j</artifactId>
      <version>${log4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-log4j12</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>${junit.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-lang</groupId>
      <artifactId>commons-lang</artifactId>
      <version>2.4</version>
    </dependency>
  </dependencies>

  <profiles>
    <!--
      This profile should be use by projects hosted internallay on VGR. The profile need to be specified explicity
      to be used: -Pinternal
    -->
    <profile>
      <id>internal</id>
      <repositories>
        <repository>
          <id>central</id>
          <name>vgr internal repo</name>
          <url>http://portalutv.vgregion.se/nexus/content/groups/all</url>
        </repository>
      </repositories>

      <pluginRepositories>
        <pluginRepository>
          <id>central</id>
          <name>vgr internal repo</name>
          <url>http://portalutv.vgregion.se/nexus/content/groups/all</url>
        </pluginRepository>
      </pluginRepositories>

      <distributionManagement>
        <repository>
          <uniqueVersion>false</uniqueVersion>
          <id>internal-repo</id>
          <url>http://portalutv.vgregion.se/nexus/content/repositories/releases/</url>
        </repository>
        <snapshotRepository>
          <uniqueVersion>false</uniqueVersion>
          <id>internal-repo</id>
          <url>http://portalutv.vgregion.se/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
      </distributionManagement>
    </profile>

    <profile>
      <!--
        This profile should be use by open source projec on VGR. The projects are hosted by google code. This is
        the default profile and is used if no other profile is specified.
      -->
      <id>open</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>com.mycila.maven-license-plugin</groupId>
            <artifactId>maven-license-plugin</artifactId>
          </plugin>
	  <plugin>
	    <groupId>org.apache.maven.plugins</groupId>
	    <artifactId>maven-war-plugin</artifactId>
	    <configuration>
              <packagingExcludes>**/security.properties</packagingExcludes>
	    </configuration>
	  </plugin>
        </plugins>
      </build>
      <repositories>
        <repository>
          <id>atlassian-public</id>
          <url>https://maven.atlassian.com/repository/public</url>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
          <releases>
            <enabled>true</enabled>
          </releases>
        </repository>
        <repository>
          <id>atlassian-m1-repository</id>
          <url>https://maven.atlassian.com/maven1</url>
          <layout>legacy</layout>
        </repository>
        <repository>
          <id>oppnaprogram-release</id>
          <name>oppna program release repo</name>
          <url>http://oppna-program.googlecode.com/svn/maven</url>
          <releases>
            <updatePolicy>never</updatePolicy>
            <checksumPolicy>warn</checksumPolicy>
            <enabled>true</enabled>
          </releases>
        </repository>
        <repository>
          <id>oppnaprogram-snapshot</id>
          <name>oppna program snapshot repo</name>
          <url>http://oppna-program.googlecode.com/svn/maven-snapshots</url>
        </repository>
        <repository>
          <id>powermock-repo</id>
          <url>http://powermock.googlecode.com/svn/repo/</url>
        </repository>
      </repositories>

      <pluginRepositories>
        <pluginRepository>
          <id>atlassian-public</id>
          <url>https://maven.atlassian.com/repository/public</url>
        </pluginRepository>
        <pluginRepository>
          <id>atlassian-m1-repository</id>
          <url>https://maven.atlassian.com/maven1</url>
          <layout>legacy</layout>
        </pluginRepository>
        <pluginRepository>
          <id>oppnaprogram-release</id>
          <name>oppna program release repo</name>
          <url>http://oppna-program.googlecode.com/svn/maven</url>
          <releases>
            <updatePolicy>never</updatePolicy>
            <checksumPolicy>warn</checksumPolicy>
            <enabled>true</enabled>
          </releases>
        </pluginRepository>
        <pluginRepository>
          <id>oppnaprogram-snapshot</id>
          <name>oppna program snapshot repo</name>
          <url>http://oppna-program.googlecode.com/svn/maven-snapshots</url>
        </pluginRepository>
        <!--Needed for the maven-license-plugin -->
        <pluginRepository>
          <id>mc-release</id>
          <name>License plugin</name>
          <url>http://mc-repo.googlecode.com/svn/maven2/releases</url>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
          <releases>
            <enabled>true</enabled>
          </releases>
        </pluginRepository>
      </pluginRepositories>

      <distributionManagement>
        <repository>
          <id>svn-repo</id>
          <name>Öppna Program Release Repo</name>
          <url>svn:https://oppna-program.googlecode.com/svn/maven</url>
        </repository>
        <snapshotRepository>
          <id>svn-repo</id>
          <name>Öppna Program Snapshot Repo</name>
          <url>svn:https://oppna-program.googlecode.com/svn/maven-snapshots</url>
        </snapshotRepository>
      </distributionManagement>
    </profile>

    <profile>
      <!--
        The prod-profile is used when building production artifacts with securities (security.properties) included.
	NB! Never deploy to maven repo with this profile.
      -->
      <id>prod</id>
      <build>
	<plugins>
          <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <configuration>
              <optimize>true</optimize>
              <debug>false</debug>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <repositories>
        <repository>
          <id>atlassian-public</id>
          <url>https://maven.atlassian.com/repository/public</url>
          <snapshots>
            <enabled>true</enabled>
          </snapshots>
          <releases>
            <enabled>true</enabled>
          </releases>
        </repository>
        <repository>
          <id>atlassian-m1-repository</id>
          <url>https://maven.atlassian.com/maven1</url>
          <layout>legacy</layout>
        </repository>
        <repository>
          <id>oppnaprogram-release</id>
          <name>oppna program release repo</name>
          <url>http://oppna-program.googlecode.com/svn/maven</url>
          <releases>
            <updatePolicy>never</updatePolicy>
            <checksumPolicy>warn</checksumPolicy>
            <enabled>true</enabled>
          </releases>
        </repository>
        <repository>
          <id>powermock-repo</id>
          <url>http://powermock.googlecode.com/svn/repo/</url>
        </repository>
      </repositories>

      <pluginRepositories>
        <pluginRepository>
          <id>atlassian-public</id>
          <url>https://maven.atlassian.com/repository/public</url>
        </pluginRepository>
        <pluginRepository>
          <id>atlassian-m1-repository</id>
          <url>https://maven.atlassian.com/maven1</url>
          <layout>legacy</layout>
        </pluginRepository>
        <pluginRepository>
          <id>oppnaprogram-release</id>
          <name>oppna program release repo</name>
          <url>http://oppna-program.googlecode.com/svn/maven</url>
          <releases>
            <updatePolicy>never</updatePolicy>
            <checksumPolicy>warn</checksumPolicy>
            <enabled>true</enabled>
          </releases>
        </pluginRepository>
      </pluginRepositories>
    </profile>

    <profile>
      <!-- Use this profile to run integration tests. -->
      <id>itest</id>
      <activation>
        <property>
          <name>itest</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <executions>
              <execution>
                <id>surefire-it</id>
                <phase>integration-test</phase>
                <goals>
                  <goal>test</goal>
                </goals>
                <configuration>
                  <excludes>
                    <exclude>none</exclude>
                  </excludes>
                  <includes>
                    <include>**/integrationtest/**</include>
                  </includes>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>
